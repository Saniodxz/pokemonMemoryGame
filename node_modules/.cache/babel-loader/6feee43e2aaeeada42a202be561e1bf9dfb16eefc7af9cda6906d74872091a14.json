{"ast":null,"code":"var _jsxFileName = \"/Users/saniodsouza/odenproject/git/MemoryGame/pokemon-memory-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Card from './components/Card.jsx';\nimport Scoreboard from './components/Scoreboard.jsx';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [pokemonData, setPokemonData] = useState([]);\n  const [score, setScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const [clickedCards, setClickedCards] = useState([]);\n  useEffect(() => {\n    fetch('https://pokeapi.co/api/v2/pokemon?limit=9').then(response => response.json()).then(data => setPokemonData(data.results));\n  }, []);\n  const shuffleCards = array => {\n    let currentIndex = array.length,\n      randomIndex,\n      tempValue;\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      tempValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = tempValue;\n    }\n    return array;\n  };\n  const handleCardClick = cardName => {\n    if (clickedCards.includes(cardName)) {\n      if (score > bestScore) {\n        setBestScore(score);\n      }\n      setScore(0);\n      setClickedCards([]);\n    } else {\n      setScore(score + 1);\n      setClickedCards([...clickedCards, cardName]);\n    }\n    setPokemonData(shuffleCards([...pokemonData]));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pokemon Memory Card Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Scoreboard, {\n      score: score,\n      bestScore: bestScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: pokemonData.map(pokemon => /*#__PURE__*/_jsxDEV(Card, {\n        data: pokemon,\n        onClick: handleCardClick\n      }, pokemon.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"62BCtsiITMLsIv4Q5Y9S6BaDoi8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Card","Scoreboard","jsxDEV","_jsxDEV","App","_s","pokemonData","setPokemonData","score","setScore","bestScore","setBestScore","clickedCards","setClickedCards","fetch","then","response","json","data","results","shuffleCards","array","currentIndex","length","randomIndex","tempValue","Math","floor","random","handleCardClick","cardName","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","pokemon","onClick","name","_c","$RefreshReg$"],"sources":["/Users/saniodsouza/odenproject/git/MemoryGame/pokemon-memory-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from './components/Card.jsx';\nimport Scoreboard from './components/Scoreboard.jsx';\nimport './App.css';\n\nfunction App() {\n  const [pokemonData, setPokemonData] = useState([]);\n  const [score, setScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const [clickedCards, setClickedCards] = useState([]);\n\n  useEffect(() => {\n    fetch('https://pokeapi.co/api/v2/pokemon?limit=9')\n      .then(response => response.json())\n      .then(data => setPokemonData(data.results));\n  }, []);\n\n  const shuffleCards = array => {\n    let currentIndex = array.length, randomIndex, tempValue;\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      tempValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = tempValue;\n    }\n    return array;\n  };\n\n  const handleCardClick = cardName => {\n    if (clickedCards.includes(cardName)) {\n      if (score > bestScore) {\n        setBestScore(score);\n      }\n      setScore(0);\n      setClickedCards([]);\n    } else {\n      setScore(score + 1);\n      setClickedCards([...clickedCards, cardName]);\n    }\n    setPokemonData(shuffleCards([...pokemonData]));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Pokemon Memory Card Game</h1>\n      <Scoreboard score={score} bestScore={bestScore} />\n      <div className=\"card-container\">\n        {pokemonData.map(pokemon => (\n          <Card key={pokemon.name} data={pokemon} onClick={handleCardClick} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}